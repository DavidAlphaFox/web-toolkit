(in-package :uri)

(declaim (ftype (function (character) (unsigned-byte 4)) hexdigit-to-integer))
(defun hexdigit-to-integer (char)
  (declare (type character char)
           (optimize (speed 3) (safety 0)))
  (let ((code (char-code char)))
    (declare (type fixnum code))
    (cond
      ((<= #.(char-code #\0) code #.(char-code #\9))
       (- code #.(char-code #\0)))
      ((<= #.(char-code #\A) code #.(char-code #\F))
       (- code #.(- (char-code #\A) 10)))
      ((<= #.(char-code #\a) code #.(char-code #\f))
       (- code #.(- (char-code #\a) 10)))
      (T (error "url-decoding-error")))))

(defun percent-encode (string)
  )

(defun percent-decode (string)
  (check-type string string)
  (let ((buffer (make-array 10 :element-type '(unsigned-byte 8) :adjustable t :fill-pointer 0)))
    (do ((i 0 (1+ i)))
        ((>= i (length string)) buffer)
      (let* ((x (char string i)))
        (if (char= #\% x)
            (if (>= (length string) (+ i 3))
                (let ((hexdigs (subseq string (+ i 1) (+ i 3))))
                  (let ((value (parse-integer hexdigs :radix 16)))
                    (vector-push-extend value buffer)
                    (incf i 2)))
                (error "Not enough"))
            (vector-push-extend (char-code x) buffer))))
    (babel:octets-to-string buffer :encoding :utf-8)))
